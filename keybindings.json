// Placer vos combinaisons de touches dans ce fichier pour remplacer les valeurs par défaut
[
    {
        "key": "cmd+e",
        "command": "github.copilot.nextPanelSolution"
    },
    {
        "key": "cmd+r",
        "command": "github.copilot.previousPanelSolution"
    },
    {   
        // Pour selectionner l'intérieur de balise Cf Bracket Select extension 
        "key": "alt+shift+a",
        "command": "bracket-select.select",
    },
    {   
        // with Go to Next/Previous Member extension
        "key": "alt+shift+up",
        "command": "gotoNextPreviousMember.previousMember",
    },
    {
        // with Go to Next/Previous Member extension
        "key": "alt+shift+down",
        "command": "gotoNextPreviousMember.nextMember",
    },
    {
        "key": "alt+up",
        "command": "cursorMove",
        "when": "editorTextFocus",
        "args": {
            "to": "prevBlankLine",
            "by": "wrappedLine",
            "select": false
        }
    },
    {
        "key": "alt+down",
        "command": "cursorMove",
        "when": "editorTextFocus",
        "args": {
            "to": "nextBlankLine",
            "by": "wrappedLine",
            "select": false
        },
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+c",
        "command": "highlightOnCopy.run",
        "when": "editorTextFocus && highlightOnCopy.init"
    },
    {
        "key": "cmd+c",
        "command": "-highlightOnCopy.run",
        "when": "editorTextFocus && highlightOnCopy.init"
    },
    {
        "key": "ctrl+e l",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus"
    },
    // vim afin de pouvoir sortir du termial en switchant de focus (ctrl+e mapper à la place de ctrl+w)
    {  
       "key": "ctrl+e k",          
        "command": "workbench.action.focusActiveEditorGroup", 
        "when": "panelFocus" 
    },
    // Copilot shortcut
    {
        "key": "cmd+down",
        "command": "editor.action.inlineSuggest.showNext",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "alt+]",
        "command": "-editor.action.inlineSuggest.showNext",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "cmd+up",
        "command": "editor.action.inlineSuggest.showPrevious",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "alt+[",
        "command": "-editor.action.inlineSuggest.showPrevious",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    // FILE TREE
    {
        "key": "n",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "command": "renameFile",
        "key": "r",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+n",
        "command": "explorer.newFolder",
        "when": "explorerViewletFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "workbench.action.newWindow",
        "when": "!explorerViewletFocus"
    },
    {
        "command": "deleteFile",
        "key": "d",
        "when": "filesExplorerFocus && !inputFocus"
    },
    // Terminal navigation à travers les panels.
    // ne fonctionne pas pour l'onget jupyter & gitlens...
    {
        "key": "ctrl+e l",          
        "command": "workbench.action.nextPanelView", 
        "when": "panelFocus" 
    },
    {
        "key": "ctrl+e h",          
        "command": "workbench.action.previousPanelView", 
        "when": "panelFocus" 
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFolderViaWorkspace",
        "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile",
        "when": "true"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFileFolder",
        "when": "isMacNative && openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+e",
        "command": "-editor.action.toggleScreenReaderAccessibilityMode",
        "when": "accessibilityHelpIsShown"
    },
    // Side bar source control
    {
        "key": "shift+cmd+g g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "cmd+enter",
        "command": "notebook.cell.execute",
        "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || !notebookCellExecuting && notebookCellType == 'code' && notebookCellListFocused || inlineChatFocused && notebookCellChatFocused && notebookKernelCount > 0 || !notebookCellExecuting && notebookCellType == 'code' && notebookCellListFocused || inlineChatFocused && notebookCellChatFocused && notebookKernelSourceCount > 0 || inlineChatFocused && notebookCellChatFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code'"
    },
    {
        "key": "ctrl+enter",
        "command": "-notebook.cell.execute",
        "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || !notebookCellExecuting && notebookCellType == 'code' && notebookCellListFocused || inlineChatFocused && notebookCellChatFocused && notebookKernelCount > 0 || !notebookCellExecuting && notebookCellType == 'code' && notebookCellListFocused || inlineChatFocused && notebookCellChatFocused && notebookKernelSourceCount > 0 || inlineChatFocused && notebookCellChatFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code'"
    },
    // To c/c on notebook output cell.
    // Conflict with Highlight on Copy extension ?
    {
        "key": "cmd+c",
        "command": "-execCopy"
    },
    // To run test on current cursor fonction 
    {
        "key": "cmd+r t",
        "command": "testing.runAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+; c",
        "command": "-testing.runAtCursor",
        "when": "editorTextFocus"
    },
    // Open chat copilot in sidebar
    {
        "key": "shift+cmd+i",
        "command": "workbench.action.chat.open"
    },
    {
        "key": "ctrl+cmd+i",
        "command": "-workbench.action.chat.open"
    },
    // Vim navigation into Notebook cell with ctrl+o & ctrl+i
    {
        "key": "ctrl+o",
        "command": "workbench.action.navigateBackInEditLocations"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.navigateForwardInEditLocations"
    },
        // hovering definition or message
    // gh to get definition hover
    // cmd+k to get focus on hover
    // hjkl / gg / shift+g to naviguate
    // esc to exit focus on hover and back to code
    {
        "key": "h",
        "command": "editor.action.scrollLeftHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "left",
        "command": "-editor.action.scrollLeftHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "j",
        "command": "editor.action.scrollDownHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "down",
        "command": "-editor.action.scrollDownHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "l",
        "command": "editor.action.scrollRightHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "right",
        "command": "-editor.action.scrollRightHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "k",
        "command": "editor.action.scrollUpHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "up",
        "command": "-editor.action.scrollUpHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "cmd+up",
        "command": "-editor.action.goToTopHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "shift+g",
        "command": "editor.action.goToBottomHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "cmd+down",
        "command": "-editor.action.goToBottomHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "g g",
        "command": "editor.action.goToTopHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "home",
        "command": "-editor.action.goToTopHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "cmd+k",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+k cmd+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    // Vscode bookmark extension
    {
        "key": "alt+a",
        "command": "bookmarks.toggle"
    },
    {
        "key": "alt+r",
        "command": "bookmarks.clear"
    },
    {
        "key": "alt+cmd+e",
        "command": "bookmarks.clearFromAllFiles"
    },
    {
        "key": "alt+t",
        "command": "bookmarks.listFromAllFiles"
    },
    {
        "key": "alt+v",
        "command": "bookmarks.toggleLabeled"
    },
        // Next & Previous bookmarks ext on notebook too
    {
        "key": "alt+cmd+l",
        "command": "bookmarks.jumpToNext",
        "when": "editorTextFocus || notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
    },
    {
        "key": "alt+cmd+l",
        "command": "-bookmarks.jumpToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+j",
        "command": "bookmarks.jumpToPrevious",
        "when": "editorTextFocus || notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
    },
    {
        "key": "alt+cmd+j",
        "command": "-bookmarks.jumpToPrevious",
        "when": "editorTextFocus"
    },
]